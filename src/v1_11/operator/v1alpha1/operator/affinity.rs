use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Configuration affecting Istio control plane installation version and shape.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Affinity : See k8s.io.api.core.v1.Affinity.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct Affinity {
    #[serde(rename = "nodeAffinity", skip_serializing_if = "Option::is_none")]
    pub node_affinity: Option<Box<super::NodeAffinity>>,
    #[serde(rename = "podAffinity", skip_serializing_if = "Option::is_none")]
    pub pod_affinity: Option<Box<super::PodAffinity>>,
    #[serde(rename = "podAntiAffinity", skip_serializing_if = "Option::is_none")]
    pub pod_anti_affinity: Option<Box<super::PodAntiAffinity>>,
}

impl Affinity {
    /// See k8s.io.api.core.v1.Affinity.
    pub fn new() -> Affinity {
        Affinity {
            node_affinity: None,
            pod_affinity: None,
            pod_anti_affinity: None,
        }
    }
}