use serde::{Deserialize, Serialize};
use schemars::JsonSchema;
/*
 * Configuration affecting label/content routing, sni routing, etc.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// HttpFaultInjectionAbort : Abort specification is used to prematurely abort a request with a pre-specified error code. The following example will return an HTTP 400 error code for 1 out of every 1000 requests to the \"ratings\" service \"v1\".



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct HttpFaultInjectionAbort {
    #[serde(rename = "percentage", skip_serializing_if = "Option::is_none")]
    pub percentage: Option<Box<super::Percent>>,
    /// HTTP status code to use to abort the Http request.
    #[serde(rename = "httpStatus")]
    pub http_status: i32,
    #[serde(rename = "grpcStatus")]
    pub grpc_status: String,
    #[serde(rename = "http2Error")]
    pub http2_error: String,
}

impl HttpFaultInjectionAbort {
    /// Abort specification is used to prematurely abort a request with a pre-specified error code. The following example will return an HTTP 400 error code for 1 out of every 1000 requests to the \"ratings\" service \"v1\".
    pub fn new(http_status: i32, grpc_status: String, http2_error: String) -> HttpFaultInjectionAbort {
        HttpFaultInjectionAbort {
            percentage: None,
            http_status,
            grpc_status,
            http2_error,
        }
    }
}