use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Configuration affecting Istio control plane installation version and shape.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// InstallStatus : Observed state of IstioOperator



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct InstallStatus {
    /// Individual status of each component controlled by the operator. The map key is the name of the component.
    #[serde(rename = "componentStatus", skip_serializing_if = "Option::is_none")]
    pub component_status: Option<::std::collections::HashMap<String, super::InstallStatusVersionStatus>>,
    /// Optional message providing additional information about the existing overall status.
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<super::InstallStatusStatus>,
}

impl InstallStatus {
    /// Observed state of IstioOperator
    pub fn new() -> InstallStatus {
        InstallStatus {
            component_status: None,
            message: None,
            status: None,
        }
    }
}