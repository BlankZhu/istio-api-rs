use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Configuration affecting Istio control plane installation version and shape.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// K8sIoApiCoreV1DownwardApiVolumeFile : DownwardAPIVolumeFile represents information to create the file containing the pod field



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct K8sIoApiCoreV1DownwardApiVolumeFile {
    #[serde(rename = "fieldRef", skip_serializing_if = "Option::is_none")]
    pub field_ref: Option<Box<super::K8sIoApiCoreV1ObjectFieldSelector>>,
    /// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. +optional
    #[serde(rename = "mode", skip_serializing_if = "Option::is_none")]
    pub mode: Option<i32>,
    /// Required: Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    #[serde(rename = "path", skip_serializing_if = "Option::is_none")]
    pub path: Option<String>,
    #[serde(rename = "resourceFieldRef", skip_serializing_if = "Option::is_none")]
    pub resource_field_ref: Option<Box<super::K8sIoApiCoreV1ResourceFieldSelector>>,
}

impl K8sIoApiCoreV1DownwardApiVolumeFile {
    /// DownwardAPIVolumeFile represents information to create the file containing the pod field
    pub fn new() -> K8sIoApiCoreV1DownwardApiVolumeFile {
        K8sIoApiCoreV1DownwardApiVolumeFile {
            field_ref: None,
            mode: None,
            path: None,
            resource_field_ref: None,
        }
    }
}