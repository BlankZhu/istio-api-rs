use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Configuration affecting Istio control plane installation version and shape.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// BaseComponentSpec : Configuration for base component.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct BaseComponentSpec {
    /// Synthetic type for generating Go structs. GOTYPE: *BoolValueForPB
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<serde_json::Value>,
    #[serde(rename = "k8s", skip_serializing_if = "Option::is_none")]
    pub k8s: Option<Box<super::KubernetesResourcesSpec>>,
}

impl BaseComponentSpec {
    /// Configuration for base component.
    pub fn new() -> BaseComponentSpec {
        BaseComponentSpec {
            enabled: None,
            k8s: None,
        }
    }
}