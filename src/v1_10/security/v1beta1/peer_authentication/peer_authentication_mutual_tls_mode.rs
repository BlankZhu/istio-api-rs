use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Peer authentication configuration for workloads.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, JsonSchema)]
pub enum PeerAuthenticationMutualTlsMode {
    #[serde(rename = "UNSET")]
    UNSET,
    #[serde(rename = "DISABLE")]
    DISABLE,
    #[serde(rename = "PERMISSIVE")]
    PERMISSIVE,
    #[serde(rename = "STRICT")]
    STRICT,

}

impl ToString for PeerAuthenticationMutualTlsMode {
    fn to_string(&self) -> String {
        match self {
            Self::UNSET => String::from("UNSET"),
            Self::DISABLE => String::from("DISABLE"),
            Self::PERMISSIVE => String::from("PERMISSIVE"),
            Self::STRICT => String::from("STRICT"),
        }
    }
}

impl Default for PeerAuthenticationMutualTlsMode {
    fn default() -> PeerAuthenticationMutualTlsMode {
        Self::UNSET
    }
}