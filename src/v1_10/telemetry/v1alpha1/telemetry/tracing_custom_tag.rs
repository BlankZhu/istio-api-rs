use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// TracingCustomTag : CustomTag defines a tag to be added to a trace span that is based on an operator-supplied value. This value can either be a hard-coded value, a value taken from an environment variable known to the sidecar proxy, or from a request header.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct TracingCustomTag {
    #[serde(rename = "literal")]
    pub literal: Box<super::TracingLiteral>,
    #[serde(rename = "environment")]
    pub environment: Box<super::TracingEnvironment>,
    #[serde(rename = "header")]
    pub header: Box<super::TracingRequestHeader>,
}

impl TracingCustomTag {
    /// CustomTag defines a tag to be added to a trace span that is based on an operator-supplied value. This value can either be a hard-coded value, a value taken from an environment variable known to the sidecar proxy, or from a request header.
    pub fn new(literal: super::TracingLiteral, environment: super::TracingEnvironment, header: super::TracingRequestHeader) -> TracingCustomTag {
        TracingCustomTag {
            literal: Box::new(literal),
            environment: Box::new(environment),
            header: Box::new(header),
        }
    }
}