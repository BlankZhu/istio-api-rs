use serde::{Deserialize, Serialize};
use schemars::JsonSchema;
/*
 * Configuration affecting load balancing, outlier detection, etc.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// LoadBalancerSettings : Load balancing policies to apply for a specific destination. See Envoy's load balancing [documentation](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/load_balancing) for more details.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct LoadBalancerSettings {
    #[serde(rename = "localityLbSetting", skip_serializing_if = "Option::is_none")]
    pub locality_lb_setting: Option<Box<super::LocalityLoadBalancerSetting>>,
    #[serde(rename = "simple")]
    pub simple: super::LoadBalancerSettingsSimpleLb,
    #[serde(rename = "consistentHash")]
    pub consistent_hash: Box<super::LoadBalancerSettingsConsistentHashLb>,
}

impl LoadBalancerSettings {
    /// Load balancing policies to apply for a specific destination. See Envoy's load balancing [documentation](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/load_balancing) for more details.
    pub fn new(simple: super::LoadBalancerSettingsSimpleLb, consistent_hash: super::LoadBalancerSettingsConsistentHashLb) -> LoadBalancerSettings {
        LoadBalancerSettings {
            locality_lb_setting: None,
            simple,
            consistent_hash: Box::new(consistent_hash),
        }
    }
}