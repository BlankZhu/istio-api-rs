use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Configuration affecting load balancing, outlier detection, etc.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// TrafficPolicyPortTrafficPolicy : Traffic policies that apply to specific ports of the service



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct TrafficPolicyPortTrafficPolicy {
    #[serde(rename = "connectionPool", skip_serializing_if = "Option::is_none")]
    pub connection_pool: Option<Box<super::ConnectionPoolSettings>>,
    #[serde(rename = "loadBalancer", skip_serializing_if = "Option::is_none")]
    pub load_balancer: Option<Box<super::LoadBalancerSettings>>,
    #[serde(rename = "outlierDetection", skip_serializing_if = "Option::is_none")]
    pub outlier_detection: Option<Box<super::OutlierDetection>>,
    #[serde(rename = "port", skip_serializing_if = "Option::is_none")]
    pub port: Option<Box<super::PortSelector>>,
    #[serde(rename = "tls", skip_serializing_if = "Option::is_none")]
    pub tls: Option<Box<super::ClientTlsSettings>>,
}

impl TrafficPolicyPortTrafficPolicy {
    /// Traffic policies that apply to specific ports of the service
    pub fn new() -> TrafficPolicyPortTrafficPolicy {
        TrafficPolicyPortTrafficPolicy {
            connection_pool: None,
            load_balancer: None,
            outlier_detection: None,
            port: None,
            tls: None,
        }
    }
}