use serde::{Deserialize, Serialize};
use schemars::JsonSchema;
/*
 * Describes a collection of workload instances.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ReadinessProbe : Users can only provide one configuration for healthchecks (tcp, http, exec), and this is expressed as a oneof. All of the other configuration values hold true for any of the healthcheck methods.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct ReadinessProbe {
    /// Number of seconds after the container has started before readiness probes are initiated.
    #[serde(rename = "initialDelaySeconds", skip_serializing_if = "Option::is_none")]
    pub initial_delay_seconds: Option<i32>,
    /// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1 second.
    #[serde(rename = "timeoutSeconds", skip_serializing_if = "Option::is_none")]
    pub timeout_seconds: Option<i32>,
    /// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1 second.
    #[serde(rename = "periodSeconds", skip_serializing_if = "Option::is_none")]
    pub period_seconds: Option<i32>,
    /// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1 second.
    #[serde(rename = "successThreshold", skip_serializing_if = "Option::is_none")]
    pub success_threshold: Option<i32>,
    /// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3 seconds.
    #[serde(rename = "failureThreshold", skip_serializing_if = "Option::is_none")]
    pub failure_threshold: Option<i32>,
    #[serde(rename = "httpGet")]
    pub http_get: Box<super::HttpHealthCheckConfig>,
    #[serde(rename = "tcpSocket")]
    pub tcp_socket: Box<super::TcpHealthCheckConfig>,
    #[serde(rename = "exec")]
    pub exec: Box<super::ExecHealthCheckConfig>,
}

impl ReadinessProbe {
    /// Users can only provide one configuration for healthchecks (tcp, http, exec), and this is expressed as a oneof. All of the other configuration values hold true for any of the healthcheck methods.
    pub fn new(http_get: super::HttpHealthCheckConfig, tcp_socket: super::TcpHealthCheckConfig, exec: super::ExecHealthCheckConfig) -> ReadinessProbe {
        ReadinessProbe {
            initial_delay_seconds: None,
            timeout_seconds: None,
            period_seconds: None,
            success_threshold: None,
            failure_threshold: None,
            http_get: Box::new(http_get),
            tcp_socket: Box::new(tcp_socket),
            exec: Box::new(exec),
        }
    }
}