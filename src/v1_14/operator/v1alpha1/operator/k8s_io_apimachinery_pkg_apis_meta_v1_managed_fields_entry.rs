use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Configuration affecting Istio control plane installation version and shape.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// K8sIoApimachineryPkgApisMetaV1ManagedFieldsEntry : ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct K8sIoApimachineryPkgApisMetaV1ManagedFieldsEntry {
    /// APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
    #[serde(rename = "apiVersion", skip_serializing_if = "Option::is_none")]
    pub api_version: Option<String>,
    /// FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"
    #[serde(rename = "fieldsType", skip_serializing_if = "Option::is_none")]
    pub fields_type: Option<String>,
    #[serde(rename = "fieldsV1", skip_serializing_if = "Option::is_none")]
    pub fields_v1: Option<Box<super::K8sIoApimachineryPkgApisMetaV1FieldsV1>>,
    /// Manager is an identifier of the workflow managing these fields.
    #[serde(rename = "manager", skip_serializing_if = "Option::is_none")]
    pub manager: Option<String>,
    /// Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
    #[serde(rename = "operation", skip_serializing_if = "Option::is_none")]
    pub operation: Option<String>,
    /// Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
    #[serde(rename = "subresource", skip_serializing_if = "Option::is_none")]
    pub subresource: Option<String>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<Box<super::K8sIoApimachineryPkgApisMetaV1Time>>,
}

impl K8sIoApimachineryPkgApisMetaV1ManagedFieldsEntry {
    /// ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
    pub fn new() -> K8sIoApimachineryPkgApisMetaV1ManagedFieldsEntry {
        K8sIoApimachineryPkgApisMetaV1ManagedFieldsEntry {
            api_version: None,
            fields_type: None,
            fields_v1: None,
            manager: None,
            operation: None,
            subresource: None,
            time: None,
        }
    }
}