use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Configuration affecting Istio control plane installation version and shape.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PodAffinityTerm : See k8s.io.api.core.v1.PodAntiAffinity.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct PodAffinityTerm {
    #[serde(rename = "labelSelector", skip_serializing_if = "Option::is_none")]
    pub label_selector: Option<Box<super::K8sIoApimachineryPkgApisMetaV1LabelSelector>>,
    #[serde(rename = "namespaces", skip_serializing_if = "Option::is_none")]
    pub namespaces: Option<Vec<String>>,
    #[serde(rename = "topologyKey", skip_serializing_if = "Option::is_none")]
    pub topology_key: Option<String>,
}

impl PodAffinityTerm {
    /// See k8s.io.api.core.v1.PodAntiAffinity.
    pub fn new() -> PodAffinityTerm {
        PodAffinityTerm {
            label_selector: None,
            namespaces: None,
            topology_key: None,
        }
    }
}