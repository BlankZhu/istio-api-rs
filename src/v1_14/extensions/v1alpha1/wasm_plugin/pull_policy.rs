use serde::{Deserialize, Serialize};
use schemars::JsonSchema;
/*
 * Extend the functionality provided by the Istio proxy through WebAssembly filters.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PullPolicy : The pull behaviour to be applied when fetching an OCI image, mirroring K8s behaviour.

/// The pull behaviour to be applied when fetching an OCI image, mirroring K8s behaviour.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, JsonSchema)]
pub enum PullPolicy {
    #[serde(rename = "UNSPECIFIED_POLICY")]
    UNSPECIFIEDPOLICY,
    #[serde(rename = "IfNotPresent")]
    IfNotPresent,
    #[serde(rename = "Always")]
    Always,

}

impl ToString for PullPolicy {
    fn to_string(&self) -> String {
        match self {
            Self::UNSPECIFIEDPOLICY => String::from("UNSPECIFIED_POLICY"),
            Self::IfNotPresent => String::from("IfNotPresent"),
            Self::Always => String::from("Always"),
        }
    }
}

impl Default for PullPolicy {
    fn default() -> PullPolicy {
        Self::UNSPECIFIEDPOLICY
    }
}