use serde::{Deserialize, Serialize};
use schemars::JsonSchema;
use kube::CustomResource;
/*
 * Extend the functionality provided by the Istio proxy through WebAssembly filters.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// WasmPluginSpec : WasmPlugins provides a mechanism to extend the functionality provided by the Istio proxy through WebAssembly filters.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema, CustomResource)]
#[kube(group = "extensions.istio.io", version = "v1alpha1", kind = "WasmPlugin", namespaced)]
pub struct WasmPluginSpec {
    #[serde(rename = "selector", skip_serializing_if = "Option::is_none")]
    pub selector: Option<Box<crate::r#type::v1beta1::workload_selector::WorkloadSelector>>,
    /// URL of a Wasm module or OCI container. If no scheme is present, defaults to `oci://`, referencing an OCI image. Other valid schemes are `file://` for referencing .wasm module files present locally within the proxy container, and `http[s]://` for .wasm module files hosted remotely.
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// SHA256 checksum that will be used to verify Wasm module or OCI container. If the `url` field already references a SHA256 (using the `@sha256:` notation), it must match the value of this field. If an OCI image is referenced by tag and this field is set, its checksum will be verified against the contents of this field after pulling.
    #[serde(rename = "sha256", skip_serializing_if = "Option::is_none")]
    pub sha256: Option<String>,
    #[serde(rename = "imagePullPolicy", skip_serializing_if = "Option::is_none")]
    pub image_pull_policy: Option<super::PullPolicy>,
    /// Credentials to use for OCI image pulling. Name of a K8s Secret in the same namespace as the `WasmPlugin` that contains a docker pull secret which is to be used to authenticate against the registry when pulling the image.
    #[serde(rename = "imagePullSecret", skip_serializing_if = "Option::is_none")]
    pub image_pull_secret: Option<String>,
    /// Public key that will be used to verify signatures of signed OCI images or Wasm modules. Must be supplied in PEM format.
    #[serde(rename = "verificationKey", skip_serializing_if = "Option::is_none")]
    pub verification_key: Option<String>,
    /// The configuration that will be passed on to the plugin.
    #[serde(rename = "pluginConfig", skip_serializing_if = "Option::is_none")]
    pub plugin_config: Option<serde_json::Value>,
    /// The plugin name to be used in the Envoy configuration (used to be called `rootID`). Some .wasm modules might require this value to select the Wasm plugin to execute.
    #[serde(rename = "pluginName", skip_serializing_if = "Option::is_none")]
    pub plugin_name: Option<String>,
    #[serde(rename = "phase", skip_serializing_if = "Option::is_none")]
    pub phase: Option<super::PluginPhase>,
    /// Determines ordering of `WasmPlugins` in the same `phase`. When multiple `WasmPlugins` are applied to the same workload in the same `phase`, they will be applied by priority, in descending order. If `priority` is not set, or two `WasmPlugins` exist with the same value, the ordering will be deterministically derived from name and namespace of the `WasmPlugins`. Defaults to `0`.
    #[serde(rename = "priority", skip_serializing_if = "Option::is_none")]
    pub priority: Option<i32>,
}

impl WasmPluginSpec {
    /// WasmPlugins provides a mechanism to extend the functionality provided by the Istio proxy through WebAssembly filters.
    pub fn new() -> WasmPluginSpec {
        WasmPluginSpec {
            selector: None,
            url: None,
            sha256: None,
            image_pull_policy: None,
            image_pull_secret: None,
            verification_key: None,
            plugin_config: None,
            plugin_name: None,
            phase: None,
            priority: None,
        }
    }
}