use kube::CustomResource;
use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Configuration affecting Istio control plane installation version and shape.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// OperatorSpec : OperatorSpec defines the desired installed state of Istio components. The spec is a used to define a customization of the default profile values that are supplied with each Istio release. Because the spec is a customization API, specifying an empty OperatorSpec results in a default Istio component values.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema, CustomResource)]
#[kube(group = "operator.istio.io", version = "v1alpha1", kind = "Operator", namespaced)]
pub struct OperatorSpec {
    /// Deprecated. Users should manage the installation of addon components on their own. Refer to samples/addons for demo installation of addon components.
    #[serde(rename = "addonComponents", skip_serializing_if = "Option::is_none")]
    pub addon_components: Option<::std::collections::HashMap<String, super::ExternalComponentSpec>>,
    #[serde(rename = "components", skip_serializing_if = "Option::is_none")]
    pub components: Option<Box<super::IstioComponentSetSpec>>,
    /// Identify whether this revision is the default revision for the cluster This option is currently experimental.
    #[serde(rename = "defaultRevision", skip_serializing_if = "Option::is_none")]
    pub default_revision: Option<bool>,
    /// Root for docker image paths e.g. `docker.io/istio`
    #[serde(rename = "hub", skip_serializing_if = "Option::is_none")]
    pub hub: Option<String>,
    /// Path for the install package. e.g.
    #[serde(rename = "installPackagePath", skip_serializing_if = "Option::is_none")]
    pub install_package_path: Option<String>,
    /// Synthetic type for generating Go structs. GOTYPE: map[string]interface{}
    #[serde(rename = "meshConfig", skip_serializing_if = "Option::is_none")]
    pub mesh_config: Option<serde_json::Value>,
    /// Namespace to install control plane resources into. If unset, Istio will be installed into the same namespace as the `IstioOperator` CR. You must also set `values.global.istioNamespace` if you wish to install Istio in a custom namespace. If you have enabled CNI, you must exclude this namespace by adding it to the list `values.cni.excludeNamespaces`.
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    /// Path or name for the profile e.g.
    #[serde(rename = "profile", skip_serializing_if = "Option::is_none")]
    pub profile: Option<String>,
    /// Resource suffix is appended to all resources installed by each component. Never implemented; replaced by revision.
    #[serde(rename = "resourceSuffix", skip_serializing_if = "Option::is_none")]
    pub resource_suffix: Option<String>,
    /// Identify the revision this installation is associated with. This option is currently experimental.
    #[serde(rename = "revision", skip_serializing_if = "Option::is_none")]
    pub revision: Option<String>,
    /// Synthetic type for generating Go structs. GOTYPE: interface{}
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<serde_json::Value>,
    /// Synthetic type for generating Go structs. GOTYPE: map[string]interface{}
    #[serde(rename = "unvalidatedValues", skip_serializing_if = "Option::is_none")]
    pub unvalidated_values: Option<serde_json::Value>,
    /// Synthetic type for generating Go structs. GOTYPE: map[string]interface{}
    #[serde(rename = "values", skip_serializing_if = "Option::is_none")]
    pub values: Option<serde_json::Value>,
}

impl OperatorSpec {
    /// OperatorSpec defines the desired installed state of Istio components. The spec is a used to define a customization of the default profile values that are supplied with each Istio release. Because the spec is a customization API, specifying an empty OperatorSpec results in a default Istio component values.
    pub fn new() -> OperatorSpec {
        OperatorSpec {
            addon_components: None,
            components: None,
            default_revision: None,
            hub: None,
            install_package_path: None,
            mesh_config: None,
            namespace: None,
            profile: None,
            resource_suffix: None,
            revision: None,
            tag: None,
            unvalidated_values: None,
            values: None,
        }
    }
}