use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Configuration for access control on workloads.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// AuthorizationPolicyAction : Action specifies the operation to take.

/// Action specifies the operation to take.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, JsonSchema)]
pub enum AuthorizationPolicyAction {
    #[serde(rename = "ALLOW")]
    ALLOW,
    #[serde(rename = "DENY")]
    DENY,
    #[serde(rename = "AUDIT")]
    AUDIT,
    #[serde(rename = "CUSTOM")]
    CUSTOM,

}

impl ToString for AuthorizationPolicyAction {
    fn to_string(&self) -> String {
        match self {
            Self::ALLOW => String::from("ALLOW"),
            Self::DENY => String::from("DENY"),
            Self::AUDIT => String::from("AUDIT"),
            Self::CUSTOM => String::from("CUSTOM"),
        }
    }
}

impl Default for AuthorizationPolicyAction {
    fn default() -> AuthorizationPolicyAction {
        Self::ALLOW
    }
}