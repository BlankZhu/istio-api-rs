use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Configuration affecting Istio control plane installation version and shape.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// K8sIoApiCoreV1SecretProjection : Adapts a secret into a projected volume.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct K8sIoApiCoreV1SecretProjection {
    /// items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. +optional
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<super::K8sIoApiCoreV1KeyToPath>>,
    #[serde(rename = "localObjectReference", skip_serializing_if = "Option::is_none")]
    pub local_object_reference: Option<Box<super::K8sIoApiCoreV1LocalObjectReference>>,
    /// optional field specify whether the Secret or its key must be defined +optional
    #[serde(rename = "optional", skip_serializing_if = "Option::is_none")]
    pub optional: Option<bool>,
}

impl K8sIoApiCoreV1SecretProjection {
    /// Adapts a secret into a projected volume.
    pub fn new() -> K8sIoApiCoreV1SecretProjection {
        K8sIoApiCoreV1SecretProjection {
            items: None,
            local_object_reference: None,
            optional: None,
        }
    }
}