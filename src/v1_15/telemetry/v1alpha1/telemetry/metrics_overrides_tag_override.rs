use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Telemetry configuration for workloads.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// MetricsOverridesTagOverride : TagOverride specifies an operation to perform on a metric dimension (also known as a `label`). Tags may be added, removed, or have their default values overridden.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct MetricsOverridesTagOverride {
    #[serde(rename = "operation", skip_serializing_if = "Option::is_none")]
    pub operation: Option<super::MetricsOverridesTagOverrideOperation>,
    /// Value is only considered if the operation is `UPSERT`. Values are [CEL expressions](https://opensource.google/projects/cel) over attributes. Examples include: \"string(destination.port)\" and \"request.host\". Istio exposes all standard [Envoy attributes](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/advanced/attributes). Additionally, Istio exposes node metadata as attributes. More information is provided in the [customization docs](https://istio.io/latest/docs/tasks/observability/metrics/customize-metrics/#use-expressions-for-values).
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
}

impl MetricsOverridesTagOverride {
    /// TagOverride specifies an operation to perform on a metric dimension (also known as a `label`). Tags may be added, removed, or have their default values overridden.
    pub fn new() -> MetricsOverridesTagOverride {
        MetricsOverridesTagOverride {
            operation: None,
            value: None,
        }
    }
}