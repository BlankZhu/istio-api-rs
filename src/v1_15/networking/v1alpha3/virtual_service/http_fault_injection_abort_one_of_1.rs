use serde::{Deserialize, Serialize};
use schemars::JsonSchema;
/*
 * Configuration affecting label/content routing, sni routing, etc.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha3
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct HttpFaultInjectionAbortOneOf1 {
    /// GRPC status code to use to abort the request. The supported codes are documented in https://github.com/grpc/grpc/blob/master/doc/statuscodes.md Note: If you want to return the status \"Unavailable\", then you should specify the code as `UNAVAILABLE`(all caps), but not `14`.
    #[serde(rename = "grpcStatus")]
    pub grpc_status: String,
}

impl HttpFaultInjectionAbortOneOf1 {
    pub fn new(grpc_status: String) -> HttpFaultInjectionAbortOneOf1 {
        HttpFaultInjectionAbortOneOf1 {
            grpc_status,
        }
    }
}