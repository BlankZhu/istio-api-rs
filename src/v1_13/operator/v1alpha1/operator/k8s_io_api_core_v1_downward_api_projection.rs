use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Configuration affecting Istio control plane installation version and shape.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// K8sIoApiCoreV1DownwardApiProjection : Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct K8sIoApiCoreV1DownwardApiProjection {
    /// Items is a list of DownwardAPIVolume file +optional
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<super::K8sIoApiCoreV1DownwardApiVolumeFile>>,
}

impl K8sIoApiCoreV1DownwardApiProjection {
    /// Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
    pub fn new() -> K8sIoApiCoreV1DownwardApiProjection {
        K8sIoApiCoreV1DownwardApiProjection {
            items: None,
        }
    }
}