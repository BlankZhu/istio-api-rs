use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Configuration affecting Istio control plane installation version and shape.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// K8sIoApiCoreV1AzureFileVolumeSource : AzureFile represents an Azure File Service mount on the host and bind mount to the pod.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct K8sIoApiCoreV1AzureFileVolumeSource {
    /// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. +optional
    #[serde(rename = "readOnly", skip_serializing_if = "Option::is_none")]
    pub read_only: Option<bool>,
    /// the name of secret that contains Azure Storage Account Name and Key
    #[serde(rename = "secretName", skip_serializing_if = "Option::is_none")]
    pub secret_name: Option<String>,
    /// Share Name
    #[serde(rename = "shareName", skip_serializing_if = "Option::is_none")]
    pub share_name: Option<String>,
}

impl K8sIoApiCoreV1AzureFileVolumeSource {
    /// AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
    pub fn new() -> K8sIoApiCoreV1AzureFileVolumeSource {
        K8sIoApiCoreV1AzureFileVolumeSource {
            read_only: None,
            secret_name: None,
            share_name: None,
        }
    }
}