use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Configuration affecting Istio control plane installation version and shape.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CrossVersionObjectReference : See k8s.io.api.autoscaling.v2beta2.CrossVersionObjectReference.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct CrossVersionObjectReference {
    #[serde(rename = "apiVersion", skip_serializing_if = "Option::is_none")]
    pub api_version: Option<String>,
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl CrossVersionObjectReference {
    /// See k8s.io.api.autoscaling.v2beta2.CrossVersionObjectReference.
    pub fn new() -> CrossVersionObjectReference {
        CrossVersionObjectReference {
            api_version: None,
            kind: None,
            name: None,
        }
    }
}