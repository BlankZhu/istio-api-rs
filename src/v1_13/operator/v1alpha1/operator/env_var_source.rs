use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Configuration affecting Istio control plane installation version and shape.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// EnvVarSource : See k8s.io.api.core.v1.EnvVarSource.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct EnvVarSource {
    #[serde(rename = "configMapKeyRef", skip_serializing_if = "Option::is_none")]
    pub config_map_key_ref: Option<Box<super::ConfigMapKeySelector>>,
    #[serde(rename = "fieldRef", skip_serializing_if = "Option::is_none")]
    pub field_ref: Option<Box<super::ObjectFieldSelector>>,
    #[serde(rename = "resourceFieldRef", skip_serializing_if = "Option::is_none")]
    pub resource_field_ref: Option<Box<super::ResourceFieldSelector>>,
    #[serde(rename = "secretKeyRef", skip_serializing_if = "Option::is_none")]
    pub secret_key_ref: Option<Box<super::SecretKeySelector>>,
}

impl EnvVarSource {
    /// See k8s.io.api.core.v1.EnvVarSource.
    pub fn new() -> EnvVarSource {
        EnvVarSource {
            config_map_key_ref: None,
            field_ref: None,
            resource_field_ref: None,
            secret_key_ref: None,
        }
    }
}