use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Telemetry configuration for workloads.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Metrics : Metrics defines the workload-level overrides for metrics generation behavior within a mesh. It can be used to enable/disable metrics generation, as well as to customize the dimensions of the generated metrics.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct Metrics {
    /// Optional. Ordered list of overrides to metrics generation behavior.
    #[serde(rename = "overrides", skip_serializing_if = "Option::is_none")]
    pub overrides: Option<Vec<super::MetricsOverrides>>,
    /// Optional. Name of providers to which this configuration should apply. If a provider is not specified, the [default metrics provider][istio.mesh.v1alpha1.MeshConfig.default_providers.metrics] will be used.
    #[serde(rename = "providers", skip_serializing_if = "Option::is_none")]
    pub providers: Option<Vec<super::ProviderRef>>,
}

impl Metrics {
    /// Metrics defines the workload-level overrides for metrics generation behavior within a mesh. It can be used to enable/disable metrics generation, as well as to customize the dimensions of the generated metrics.
    pub fn new() -> Metrics {
        Metrics {
            overrides: None,
            providers: None,
        }
    }
}