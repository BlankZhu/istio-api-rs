use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Telemetry configuration for workloads.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// MetricsOverrides : MetricsOverrides defines custom metric generation behavior for an individual metric or the set of all standard metrics.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, JsonSchema)]
pub struct MetricsOverrides {
    /// Optional. Must explicitly set this to \"true\" to turn off metrics reporting for the listed metrics. If disabled has been set to \"true\" in a parent configuration, it must explicitly be set to \"false\" to turn metrics reporting on in the workloads selected by the Telemetry resource.
    #[serde(rename = "disabled", skip_serializing_if = "Option::is_none")]
    pub disabled: Option<bool>,
    #[serde(rename = "match", skip_serializing_if = "Option::is_none")]
    pub _match: Option<Box<super::MetricSelector>>,
    /// Optional. Collection of tag names and tag expressions to override in the selected metric(s). The key in the map is the name of the tag. The value in the map is the operation to perform on the the tag. WARNING: some providers may not support adding/removing tags. See also: https://istio.io/latest/docs/reference/config/metrics/#labels
    #[serde(rename = "tagOverrides", skip_serializing_if = "Option::is_none")]
    pub tag_overrides: Option<::std::collections::HashMap<String, super::MetricsOverridesTagOverride>>,
}

impl MetricsOverrides {
    /// MetricsOverrides defines custom metric generation behavior for an individual metric or the set of all standard metrics.
    pub fn new() -> MetricsOverrides {
        MetricsOverrides {
            disabled: None,
            _match: None,
            tag_overrides: None,
        }
    }
}