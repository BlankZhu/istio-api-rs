use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
/*
 * Customizing Envoy configuration generated by Istio.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// EnvoyFilterPatchFilterClass : FilterClass determines the filter insertion point in the filter chain relative to the filters implicitly inserted by the control plane. It is used in conjuction with the `ADD` operation. This is the preferred insertion mechanism for adding filters over the `INSERT_*` operations since those operations rely on potentially unstable filter names. Filter ordering is important if your filter depends on or affects the functioning of a another filter in the filter chain. Within a filter class, filters are inserted in the order of processing.

/// FilterClass determines the filter insertion point in the filter chain relative to the filters implicitly inserted by the control plane. It is used in conjuction with the `ADD` operation. This is the preferred insertion mechanism for adding filters over the `INSERT_*` operations since those operations rely on potentially unstable filter names. Filter ordering is important if your filter depends on or affects the functioning of a another filter in the filter chain. Within a filter class, filters are inserted in the order of processing.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, JsonSchema)]
pub enum EnvoyFilterPatchFilterClass {
    #[serde(rename = "UNSPECIFIED")]
    UNSPECIFIED,
    #[serde(rename = "AUTHN")]
    AUTHN,
    #[serde(rename = "AUTHZ")]
    AUTHZ,
    #[serde(rename = "STATS")]
    STATS,

}

impl ToString for EnvoyFilterPatchFilterClass {
    fn to_string(&self) -> String {
        match self {
            Self::UNSPECIFIED => String::from("UNSPECIFIED"),
            Self::AUTHN => String::from("AUTHN"),
            Self::AUTHZ => String::from("AUTHZ"),
            Self::STATS => String::from("STATS"),
        }
    }
}

impl Default for EnvoyFilterPatchFilterClass {
    fn default() -> EnvoyFilterPatchFilterClass {
        Self::UNSPECIFIED
    }
}