use serde::{Deserialize, Serialize};
use schemars::JsonSchema;
/*
 * Configuration affecting label/content routing, sni routing, etc.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha3
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, JsonSchema)]
pub enum HttpRedirectRedirectPortSelection {
    #[serde(rename = "FROM_PROTOCOL_DEFAULT")]
    PROTOCOLDEFAULT,
    #[serde(rename = "FROM_REQUEST_PORT")]
    REQUESTPORT,

}

impl ToString for HttpRedirectRedirectPortSelection {
    fn to_string(&self) -> String {
        match self {
            Self::PROTOCOLDEFAULT => String::from("FROM_PROTOCOL_DEFAULT"),
            Self::REQUESTPORT => String::from("FROM_REQUEST_PORT"),
        }
    }
}

impl Default for HttpRedirectRedirectPortSelection {
    fn default() -> HttpRedirectRedirectPortSelection {
        Self::PROTOCOLDEFAULT
    }
}