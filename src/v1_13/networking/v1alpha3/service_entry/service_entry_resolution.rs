use serde::{Deserialize, Serialize};
use schemars::JsonSchema;
/*
 * Configuration affecting service registry.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ServiceEntryResolution : Resolution determines how the proxy will resolve the IP addresses of the network endpoints associated with the service, so that it can route to one of them. The resolution mode specified here has no impact on how the application resolves the IP address associated with the service. The application may still have to use DNS to resolve the service to an IP so that the outbound traffic can be captured by the Proxy. Alternatively, for HTTP services, the application could directly communicate with the proxy (e.g., by setting HTTP_PROXY) to talk to these services.

/// Resolution determines how the proxy will resolve the IP addresses of the network endpoints associated with the service, so that it can route to one of them. The resolution mode specified here has no impact on how the application resolves the IP address associated with the service. The application may still have to use DNS to resolve the service to an IP so that the outbound traffic can be captured by the Proxy. Alternatively, for HTTP services, the application could directly communicate with the proxy (e.g., by setting HTTP_PROXY) to talk to these services.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, JsonSchema)]
pub enum ServiceEntryResolution {
    #[serde(rename = "NONE")]
    NONE,
    #[serde(rename = "STATIC")]
    _STATIC,
    #[serde(rename = "DNS")]
    DNS,
    #[serde(rename = "DNS_ROUND_ROBIN")]
    DNSROUNDROBIN,

}

impl ToString for ServiceEntryResolution {
    fn to_string(&self) -> String {
        match self {
            Self::NONE => String::from("NONE"),
            Self::_STATIC => String::from("STATIC"),
            Self::DNS => String::from("DNS"),
            Self::DNSROUNDROBIN => String::from("DNS_ROUND_ROBIN"),
        }
    }
}

impl Default for ServiceEntryResolution {
    fn default() -> ServiceEntryResolution {
        Self::NONE
    }
}